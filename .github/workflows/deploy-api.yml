name: Deploy API

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-api.yml'
  workflow_dispatch: {}

concurrency:
  group: deploy-api
  cancel-in-progress: true

env:
  AWS_REGION: us-east-2
  INSTANCE_ID: i-05100bae19aa8379a

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::397570188272:role/github-oidc-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Build remote deploy script (base64)
        id: pack
        run: |
          cat > deploy.sh <<'EOS'
          set -euo pipefail

          REPO_DIR="/home/ec2-user/gameAI"

          # first-time clone
          if [ ! -d "$REPO_DIR/.git" ]; then
            git clone https://github.com/KyleWhite22/GameGeniusAI.git "$REPO_DIR"
          fi

          # pull latest main
          git -C "$REPO_DIR" fetch --all
          git -C "$REPO_DIR" reset --hard origin/main

          # enter backend
          if [ -d "$REPO_DIR/backend" ]; then
            cd "$REPO_DIR/backend"
          elif [ -d "$REPO_DIR/gameAI/backend" ]; then
            cd "$REPO_DIR/gameAI/backend"
          else
            echo "❌ Could not find backend directory"; exit 1
          fi

          # load nvm if used; ensure pm2 on PATH
          [ -f "$HOME/.nvm/nvm.sh" ] && . "$HOME/.nvm/nvm.sh" || true
          command -v pm2 >/dev/null 2>&1 || export PATH="$HOME/.npm-global/bin:$PATH"

          # install deps
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

          # choose entry
          APP="server.js"
          [ -f dist/server.js ] && APP="dist/server.js"

          # reload/start pm2 app
          if pm2 describe gamegenius >/dev/null 2>&1; then
            pm2 reload gamegenius --update-env
          else
            pm2 start "$APP" --name gamegenius
          fi

          pm2 save

          # health check
          sleep 2
          curl -fsS http://127.0.0.1:5000/health
          EOS

          B64=$(base64 -w0 < deploy.sh)
          echo "b64=$B64" >> "$GITHUB_OUTPUT"

      - name: Send via SSM and wait
        id: ssm
        run: |
          CMD_ID=$(aws ssm send-command \
            --instance-ids "$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "GameGeniusAI API deploy" \
            --parameters commands="[
              \"set -euo pipefail\",
              \"echo '${{ steps.pack.outputs.b64 }}' | base64 -d >/tmp/deploy.sh\",
              \"chmod +x /tmp/deploy.sh\",
              \"bash /tmp/deploy.sh\"
            ]" \
            --query "Command.CommandId" --output text)
          echo "command_id=$CMD_ID" >> "$GITHUB_OUTPUT"

          aws ssm wait command-executed \
            --command-id "$CMD_ID" \
            --instance-id "$INSTANCE_ID"

          # show output for visibility
          aws ssm get-command-invocation \
            --command-id "$CMD_ID" \
            --instance-id "$INSTANCE_ID" \
            --query 'StandardOutputContent' \
            --output text

      - name: Verify via ALB/Nginx
        run: |
          curl -I https://api.kyle-white.com/health